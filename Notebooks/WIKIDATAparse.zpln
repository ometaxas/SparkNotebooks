{
 "paragraphs": [
  {
   "text": "%spark.conf\n\n# It is strongly recommended to set SPARK_HOME explictly instead of using the embedded spark of Zeppelin. As the function of embedded spark of Zeppelin is limited and can only run in local mode.\nSPARK_HOME /home/ometaxas/Programs/spark-3.0.1-bin-hadoop3.2\n#com.github.haifengl:smile-scala_2.12:2.5.3,com.databricks:spark-xml_2.12:0.10.0,com.github.mrpowers:spark-stringmetric_2.12:0.3.0\n#spark.jars /home/ometaxas/Programs/spark-3.0.1-bin-hadoop3.2/plugins/rapids-4-spark_2.12-0.3.0.jar, /home/ometaxas/Programs/spark-3.0.1-bin-hadoop3.2/plugins/cudf-0.17-cuda10-1.jar\n\n#spark.sql.warehouse.dir /home/ometaxas/Programs/zeppelin-0.9.0-preview2-bin-all/spark-warehouse\n\nspark.serializer org.apache.spark.serializer.KryoSerializer\nspark.kryoserializer.buffer.max 1000M\nspark.driver.memory 95g\nspark.driver.maxResultSize 5g \n\n#spark.rapids.sql.concurrentGpuTasks=2\n#spark.rapids.sql.enabled true\n#spark.rapids.memory.pinnedPool.size 2G \n\n#spark.plugins com.nvidia.spark.SQLPlugin \n\n#spark.locality.wait 0s \n#spark.sql.files.maxPartitionBytes 512m \n#spark.sql.shuffle.partitions 100 \n#spark.executor.resource.gpu.amount=1\n\n\nSPARK_LOCAL_DIRS /media/ometaxas/nvme/spark\n#, /home/ometaxas/Programs/spark-3.0.1-bin-hadoop3.2/tmp\n                                             \n# /home/ometaxas/Programs/spark-3.0.1-bin-hadoop3.2/tmp,/media/datadisk/Datasets/Spark\n#,/media/datadisk/Datasets/Spark \n#/media/datadisk/Datasets/Spark\n\n# set executor memrory 110g\n# spark.executor.memory  60g\n\n\n# set executor number to be 6\n# spark.executor.instances  6\n\n\n# Uncomment the following line if you want to use yarn-cluster mode (It is recommended to use yarn-cluster mode after Zeppelin 0.8, as the driver will run on the remote host of yarn cluster which can mitigate memory pressure of zeppelin server)\n# master yarn-cluster\n\n# Uncomment the following line if you want to use yarn-client mode (It is not recommended to use it after 0.8. Because it would launch the driver in the same host of zeppelin server which will increase memory pressure of zeppelin server)\n# master yarn-client\n\n# Uncomment the following line to enable HiveContext, and also put hive-site.xml under SPARK_CONF_DIR\n# zeppelin.spark.useHiveContext true\n",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T12:38:44+0300",
   "config": {
    "editorSetting": {
     "language": "scala",
     "editOnDblClick": false,
     "completionKey": "TAB",
     "completionSupport": true
    },
    "colWidth": 12.0,
    "editorMode": "ace/mode/scala",
    "fontSize": 9.0,
    "results": {},
    "enabled": true
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": []
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618306724177_1906246491",
   "id": "paragraph_1618306724177_1906246491",
   "dateCreated": "2021-04-13T12:38:44+0300",
   "dateStarted": "2021-04-13T12:38:44+0300",
   "dateFinished": "2021-04-13T12:38:44+0300",
   "status": "FINISHED"
  },
  {
   "text": "%spark\nval normStr = udf[String, String]((e: String) => {\n    if (e != null) {\n        e.toLowerCase()\n                //.replaceAll(\"[ <>:´,’./\\\\'\\\\\\\";(){}!@#$%^&+‐–*\\\\\\\\-]+\", \"\")\n                .replaceAll(\"\\\"\", \"\")\n                .trim()\n    } else e;\n\n})\n\nspark.udf.register(\"normStr\", normStr)\n\nval normArrStr = udf[Seq[String], Seq[String]]((e: Seq[String]) => {\n    if (e != null) {\n    e.map(_.toLowerCase().replaceAll(\"\\\"\", \"\").trim());\n    /*\n     for ( i <- 0 to (e.length - 1)) {\n         e(i) = e(i);\n      }\n        for ( r <- 0 to (e.length - 1)) {\n            e(r) = e(r).toLowerCase()\n                    //.replaceAll(\"[ <>:´,’./\\\\'\\\\\\\";(){}!@#$%^&+‐–*\\\\\\\\-]+\", \"\")\n                    .replaceAll(\"\\\"\", \"\")\n                    .trim();\n        }\n*/\n    } else e;\n\n})\n\nspark.udf.register(\"normArrStr\", normArrStr)\n\nval WIKI_HOME = \"/media/ometaxas/nvme/datasets/WikiData/dump.parquet\"\nval WIKI_OUT = \"/media/ometaxas/nvme/datasets/WikiData/out\"",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T12:39:53+0300",
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "\u001b[1m\u001b[34mnormStr\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.expressions.UserDefinedFunction\u001b[0m = SparkUserDefinedFunction($Lambda$2552/0x00007f2334d9f040@78d6bc1f,StringType,List(Some(class[value[0]: string])),None,true,true)\n\u001b[1m\u001b[34mnormArrStr\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.expressions.UserDefinedFunction\u001b[0m = SparkUserDefinedFunction($Lambda$2554/0x00007f2334d9c040@23212685,ArrayType(StringType,true),List(Some(class[value[0]: array<string>])),None,true,true)\n\u001b[1m\u001b[34mWIKI_HOME\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /media/ometaxas/nvme/datasets/WikiData/dump.parquet\n\u001b[1m\u001b[34mWIKI_OUT\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /media/ometaxas/nvme/datasets/WikiData/out\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {},
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618306793203_920373240",
   "id": "paragraph_1618306793203_920373240",
   "dateCreated": "2021-04-13T12:39:53+0300",
   "dateStarted": "2021-04-13T12:39:53+0300",
   "dateFinished": "2021-04-13T12:39:53+0300",
   "status": "FINISHED"
  },
  {
   "title": "Generic Stats on Wikidata",
   "text": "%spark\n\nval wikidatadf = spark.read.parquet(s\"file://$WIKI_HOME\")\nwikidatadf.show(10)\nwikidatadf.printSchema\nprintln(\"Wikidata cnt:\" + wikidatadf.count())\n",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T12:39:58+0300",
   "config": {
    "title": true,
    "results": [
     {}
    ]
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "state": {
        "currentPage": "Console"
       }
      }
     }
    },
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+------+----+--------------------+--------------------+------------------------+--------------------+--------------------+\n|    id| typ|              labels|        descriptions|                 aliases|              claims|           siteLinks|\n+------+----+--------------------+--------------------+------------------------+--------------------+--------------------+\n|Q14096|item|[ar -> \"جوانا مور...|[ar -> \"عالِمة حا...|                      []|[[Q14096$75d65783...|[[enwiki, Johanna...|\n|Q13744|item|[ta -> \"பட்டன்கஸ்...|[fr -> \"province ...|    [ceb -> [\"Lalawig...|[[Q13744$12B6E068...|[[mkwiki, Батанга...|\n| Q4840|item|[fr -> \"Spur Batt...|[fr -> \"batterie ...|                      []|[[Q4840$988A63C9-...|[[knwiki, ಸ್ಪರ್ ಬ...|\n| Q4290|item|[hy -> \"ներդրում\"...|[ba -> \"капиталды...|    [hy -> [\"Ավանդ\"],...|[[Q4290$BBECEFD0-...|[[mkwiki, Инвести...|\n|Q10056|item|[hy -> \"Զեյստ\", v...|[lb -> \"hollännes...|[ja -> [\"ゼイスト\"], ...|[[Q10056$cd813362...|[[mkwiki, Зајст, ...|\n|Q21507|item|[hy -> \"Զենակեր\",...|[hy -> \"համայնք Ֆ...|    [mg -> [\"Patrick ...|[[Q21507$9FC594D4...|[[trwiki, Zehnack...|\n|Q27550|item|[ar -> \"دولاج\", f...|[ar -> \"شركة فرنس...|    [de -> [\"Automobi...|[[Q27550$19aab53a...|[[itwiki, Delage,...|\n| Q2217|item|[ar -> \"ألتو هوسب...|[fr -> \"commune c...|                      []|[[Q2217$E57E2BF0-...|[[trwiki, Alto Ho...|\n|Q43715|item|[hy -> \"Դրակուլա\"...|[ar -> \"حاكم روما...|    [hy -> [\"Դռակուլա...|[[Q43715$F9619CA9...|[[barwiki, Vlad T...|\n|Q27785|item|[fr -> \"dena'ina\"...|[fr -> \"langue at...|    [en -> [\"Tanaina ...|[[Q27785$1CF53B5F...|[[trwiki, Denağin...|\n+------+----+--------------------+--------------------+------------------------+--------------------+--------------------+\nonly showing top 10 rows\n\nroot\n |-- id: string (nullable = true)\n |-- typ: string (nullable = true)\n |-- labels: map (nullable = true)\n |    |-- key: string\n |    |-- value: string (valueContainsNull = true)\n |-- descriptions: map (nullable = true)\n |    |-- key: string\n |    |-- value: string (valueContainsNull = true)\n |-- aliases: map (nullable = true)\n |    |-- key: string\n |    |-- value: array (valueContainsNull = true)\n |    |    |-- element: string (containsNull = true)\n |-- claims: array (nullable = true)\n |    |-- element: struct (containsNull = true)\n |    |    |-- id: string (nullable = true)\n |    |    |-- mainSnak: struct (nullable = true)\n |    |    |    |-- typ: string (nullable = true)\n |    |    |    |-- property: string (nullable = true)\n |    |    |    |-- dataType: string (nullable = true)\n |    |    |    |-- dataValue: struct (nullable = true)\n |    |    |    |    |-- typ: string (nullable = true)\n |    |    |    |    |-- value: string (nullable = true)\n |    |    |    |-- hash: string (nullable = true)\n |    |    |-- typ: string (nullable = true)\n |    |    |-- rank: string (nullable = true)\n |    |    |-- qualifiers: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- typ: string (nullable = true)\n |    |    |    |    |-- property: string (nullable = true)\n |    |    |    |    |-- dataType: string (nullable = true)\n |    |    |    |    |-- dataValue: struct (nullable = true)\n |    |    |    |    |    |-- typ: string (nullable = true)\n |    |    |    |    |    |-- value: string (nullable = true)\n |    |    |    |    |-- hash: string (nullable = true)\n |    |    |-- references: array (nullable = true)\n |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |-- snaks: array (nullable = true)\n |    |    |    |    |    |-- element: struct (containsNull = true)\n |    |    |    |    |    |    |-- typ: string (nullable = true)\n |    |    |    |    |    |    |-- property: string (nullable = true)\n |    |    |    |    |    |    |-- dataType: string (nullable = true)\n |    |    |    |    |    |    |-- dataValue: struct (nullable = true)\n |    |    |    |    |    |    |    |-- typ: string (nullable = true)\n |    |    |    |    |    |    |    |-- value: string (nullable = true)\n |    |    |    |    |    |    |-- hash: string (nullable = true)\n |    |    |    |    |-- order: array (nullable = true)\n |    |    |    |    |    |-- element: string (containsNull = true)\n |    |    |    |    |-- hash: string (nullable = true)\n |-- siteLinks: array (nullable = true)\n |    |-- element: struct (containsNull = true)\n |    |    |-- site: string (nullable = true)\n |    |    |-- title: string (nullable = true)\n |    |    |-- badges: array (nullable = true)\n |    |    |    |-- element: string (containsNull = true)\n |    |    |-- url: string (nullable = true)\n\nWikidata cnt:92854518\n\u001b[1m\u001b[34mwikidatadf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [id: string, typ: string ... 5 more fields]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=0"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=1"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=2"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618306798127_1917404001",
   "id": "paragraph_1618306798127_1917404001",
   "dateCreated": "2021-04-13T12:39:58+0300",
   "dateStarted": "2021-04-13T12:39:58+0300",
   "dateFinished": "2021-04-13T12:40:03+0300",
   "status": "FINISHED"
  },
  {
   "title": "get countries",
   "text": "%spark\nimport org.apache.spark.sql.functions.countDistinct;\nimport org.apache.spark.storage.StorageLevel;\n\nval wikidatadf = spark.read.parquet(s\"file://$WIKI_HOME\")\n\nval countriesWIKIdf = wikidatadf\n        .withColumn(\"label_en\", normStr($\"labels\".getItem(\"en\")))\n        .withColumn(\"ISO3166_2codeValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P297')\"))\n        .withColumn(\"ISO3166_2Codes\", expr(\"TRANSFORM (ISO3166_2codeValue, x -> x.mainSnak.dataValue.value)\"))\n        .withColumn(\"ISO3166_2Code\", normStr(element_at(col(\"ISO3166_2Codes\"), 1)))\n        .withColumn(\"ISO3166_3codeValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P298')\"))\n        .withColumn(\"ISO3166_3Codes\", expr(\"TRANSFORM (ISO3166_3codeValue, x -> x.mainSnak.dataValue.value)\"))\n        .withColumn(\"ISO3166_3Code\", normStr(element_at(col(\"ISO3166_3Codes\"), 1)))\n\n        .withColumn(\"instanceofsVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P31')\"))\n        .withColumn(\"instanceofs\", expr(\"TRANSFORM (instanceofsVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"))\n        .withColumn(\"isCountry\", array_contains(col(\"instanceofs\"), \"Q6256\"))\n\n        .filter($\"isCountry\")\n        .select($\"id\", $\"label_en\", $\"ISO3166_2Code\", $\"ISO3166_3Code\")\n\n        .persist(StorageLevel.DISK_ONLY)\n\ncountriesWIKIdf.show(10)\ncountriesWIKIdf.printSchema\nprintln(\"Wikidata cnt:\" + countriesWIKIdf.count())\ncountriesWIKIdf.write.mode(\"overwrite\").parquet(s\"$WIKI_OUT/countries_wikidata.parquet\")\n//countriesWIKIdf.write.json(s\"$WIKI_HOME/countries_wikidata.json\")\n",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T12:41:12+0300",
   "config": {
    "title": true,
    "results": [
     {}
    ]
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "state": {
        "currentPage": "Table"
       }
      }
     }
    },
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+----+-----------+-------------+-------------+\n|  id|   label_en|ISO3166_2Code|ISO3166_3Code|\n+----+-----------+-------------+-------------+\n|Q241|       cuba|           cu|          cub|\n|Q954|   zimbabwe|           zw|          zwe|\n|Q962|      benin|           bj|          ben|\n| Q39|switzerland|           ch|          che|\n|Q800| costa rica|           cr|          cri|\n|Q784|   dominica|           dm|          dma|\n| Q79|      egypt|           eg|          egy|\n|Q769|    grenada|           gd|          grd|\n|Q114|      kenya|           ke|          ken|\n| Q36|     poland|           pl|          pol|\n+----+-----------+-------------+-------------+\nonly showing top 10 rows\n\nroot\n |-- id: string (nullable = true)\n |-- label_en: string (nullable = true)\n |-- ISO3166_2Code: string (nullable = true)\n |-- ISO3166_3Code: string (nullable = true)\n\nWikidata cnt:233\nimport org.apache.spark.sql.functions.countDistinct\nimport org.apache.spark.storage.StorageLevel\n\u001b[1m\u001b[34mwikidatadf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [id: string, typ: string ... 5 more fields]\n\u001b[1m\u001b[34mcountriesWIKIdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [id: string, label_en: string ... 2 more fields]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=3"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=4"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=5"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=6"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=7"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=8"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=9"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618306872372_699333607",
   "id": "paragraph_1618306872372_699333607",
   "dateCreated": "2021-04-13T12:41:12+0300",
   "dateStarted": "2021-04-13T12:41:12+0300",
   "dateFinished": "2021-04-13T12:58:47+0300",
   "status": "FINISHED"
  },
  {
   "title": "Get Organizations",
   "text": "%spark\n//Process WIKIDATA parquet files \n\nimport org.apache.spark.sql.types._\nimport org.apache.commons.lang.StringUtils\nimport java.lang.Integer.parseInt\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.apache.spark.sql.functions.concat_ws;\nimport org.apache.spark.sql.functions.countDistinct;\nimport org.apache.spark.storage.StorageLevel;\n\n\n/* Properties \nMAG_Id: P6366\nGRID_ID: P2427\nRinggold ID: P3500\nROR: P6782\nISNI: P213\nCrossRefFunder: P3153\n\nCountry: P17\nOfficial WEB Site: P856\n    language of work or name: P407\nparent Org: P749\nChildren(subsidiary): P355\n\nInstance_Of: P31\nscholarly article: Q13442814\nOfficialName: P1448\n\n\n*/\n\nval countriesWIKIdf = spark.read.parquet(s\"$WIKI_OUT/countries_wikidata.parquet\")\nval wikidatadf = spark.read.parquet(s\"file://$WIKI_HOME\")\n\nval magWIKIdf = wikidatadf\n        //.withColumn(\"label_lng\", map_keys($\"labels\").getItem(0))\n        //.withColumn(\"label\", map_values($\"labels\").getItem(0))\n        //.withColumn(\"existence_flag\", expr(\"exists(claims, x -> x.id = 'Q27721769$8226B15F-37DE-4BEF-8F8F-80D442DFDDA9')\"))\n        //.withColumn(\"existence_flag\", expr(\"exists(claims, x -> x.mainSnak.property = 'P356' and x.mainSnak.dataValue.value = '\\\"10.1111/J.1464-5491.2009.02743.X\\\"')\"))\n\n        .withColumn(\"labels_en\",normStr($\"labels\".getItem(\"en\")))\n        .withColumn(\"labels_fr\", normStr($\"labels\".getItem(\"fr\")))\n        .withColumn(\"labels_de\", normStr($\"labels\".getItem(\"de\")))\n        .withColumn(\"labels_es\", normStr($\"labels\".getItem(\"es\")))\n        \n        .withColumn(\"aliases_en\", normArrStr($\"aliases\".getItem(\"en\")))\n        //.withColumn(\"aliases_en\", normArrStr($\"aliases_en1\"))\n        \n        .withColumn(\"aliases_fr\", normArrStr($\"aliases\".getItem(\"fr\")))\n        //.withColumn(\"aliases_fr\", normArrStr($\"aliases_fr1\"))\n        \n        .withColumn(\"aliases_de\", normArrStr($\"aliases\".getItem(\"de\")))\n        //.withColumn(\"aliases_de\", normArrStr($\"aliases_de1\"))\n        \n        .withColumn(\"aliases_es\", normArrStr($\"aliases\".getItem(\"es\")))\n        //.withColumn(\"aliases_es\", normArrStr($\"aliases_es1\"))\n        \n        .withColumn(\"existence_mag\", expr(\"exists(claims, x -> x.mainSnak.property = 'P6366')\")) //has MAG_ID\n        .withColumn(\"existence_org\", expr(\"exists(claims, x ->  x.mainSnak.property = 'P2427'  OR x.mainSnak.property = 'P3500'   OR x.mainSnak.property = 'P6782'  )\")) // has either GRID or Ringgold\n        .withColumn(\"is_research_article_flag\", expr(\"exists(claims, x -> x.mainSnak.property = 'P31' and x.mainSnak.dataValue.value = 'Q13442814')\")) //Is Scholarly Article \n        \n        .withColumn(\"instanceofsVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P31')\"))\n        .withColumn(\"instanceofs\", expr(\"TRANSFORM (instanceofsVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"))\n        .withColumn(\"is_country_flag\", array_contains(col(\"instanceofs\"), \"Q6256\"))\n\n        .withColumn(\"countriesVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P17')\"))\n        .withColumn(\"countryId\", element_at(expr(\"TRANSFORM (countriesVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"), 1))\n\n        .withColumn(\"subsidiaryVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P355')\"))\n        .withColumn(\"subsidiaries\", expr(\"TRANSFORM (subsidiaryVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"))\n\n        .withColumn(\"parentVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P749')\"))\n        .withColumn(\"parents\", expr(\"TRANSFORM (parentVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"))\n\n        .withColumn(\"WebPageValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P856')\"))\n        .withColumn(\"WebPage\", normStr(element_at(expr(\"TRANSFORM (WebPageValue, x -> x.mainSnak.dataValue.value)\"), 1))) //Official WEB Site\n\n\n        .withColumn(\"MAG_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P6366')\"))\n        .withColumn(\"MAG_ID\", normStr(element_at(expr(\"TRANSFORM (MAG_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n        //.withColumn(\"MAGID\",concat_ws(\",\",col(\"MAGIDsarr\")))\n\n        .withColumn(\"RINGGOLD_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P3500')\"))\n        .withColumn(\"RINGGOLD_ID\", normStr(element_at(expr(\"TRANSFORM (RINGGOLD_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n        //.withColumn(\"RINGGOLDIds\",concat_ws(\",\",col(\"RINGGOLDIdsarr\")))\n\n        .withColumn(\"ROR_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P6782')\"))\n        .withColumn(\"ROR_ID\", normStr(element_at(expr(\"TRANSFORM (ROR_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n\n        .withColumn(\"ISNI_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P213')\"))\n        .withColumn(\"ISNI_ID\", normStr(element_at(expr(\"TRANSFORM (ISNI_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n\n        .withColumn(\"GRID_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P2427')\"))\n        .withColumn(\"GRID_ID\", normStr(element_at(expr(\"TRANSFORM (GRID_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n\n\n        .withColumn(\"CR_FUNDER_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P3153')\"))\n        .withColumn(\"CR_FUNDER_ID\", normStr(element_at(expr(\"TRANSFORM (CR_FUNDER_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n        //.withColumn(\"ISO3166_3Code\",  element_at(col(\"ISO3166_3Codes\"),1))\n\n\n        .filter($\"existence_org\" === true && $\"typ\" === \"item\" && $\"is_research_article_flag\" === false && $\"is_country_flag\" === false )\n        .join(broadcast(countriesWIKIdf), countriesWIKIdf(\"Id\") === $\"countryId\", \"outer\")\n        .select(wikidatadf(\"id\"), $\"existence_mag\", $\"existence_org\", $\"MAG_ID\", $\"CR_FUNDER_ID\", $\"GRID_ID\", $\"ISNI_ID\", $\"ROR_ID\", $\"RINGGOLD_ID\", $\"WebPage\", $\"parents\"\n            , $\"subsidiaries\", $\"countryId\", $\"labels_en\", $\"labels_es\", $\"labels_fr\", $\"labels_de\", $\"aliases_en\", $\"aliases_es\", $\"aliases_de\", $\"aliases_fr\", $\"ISO3166_3Code\"\n            , $\"ISO3166_2Code\")\n        //.limit(10).cache()\n       .persist(StorageLevel.DISK_ONLY)\n\nmagWIKIdf.show()\nmagWIKIdf.printSchema\nprintln(\"Wikidata cnt:\" + magWIKIdf.count())\n\n//magWIKIdf.write.mode(\"overwrite\").json(s\"$WIKI_OUT/sample_out.json\")\nmagWIKIdf.write.mode(\"overwrite\").parquet(s\"$WIKI_OUT/wiki_orgs.parquet\")\n",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T13:53:12+0300",
   "config": {
    "title": true,
    "results": [
     {}
    ]
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "state": {
        "currentPage": "Console",
        "table": {
         "visibleColumn": 10.0
        }
       }
      }
     }
    },
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+----------+-------------+-------------+----------+------------+-------------+-------------------+---------+-----------+--------------------+---------+------------+---------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+----------+----------+-------------+-------------+\n|        id|existence_mag|existence_org|    MAG_ID|CR_FUNDER_ID|      GRID_ID|            ISNI_ID|   ROR_ID|RINGGOLD_ID|             WebPage|  parents|subsidiaries|countryId|           labels_en|           labels_es|           labels_fr|           labels_de|          aliases_en|          aliases_es|aliases_de|aliases_fr|ISO3166_3Code|ISO3166_2Code|\n+----------+-------------+-------------+----------+------------+-------------+-------------------+---------+-----------+--------------------+---------+------------+---------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+----------+----------+-------------+-------------+\n|Q100924085|        false|         true|      null|        null|         null|0000 0004 0396 5684|     null|     187094|                null|       []|          []|   Q25228|saint james schoo...|                null|                null|                null|                null|                null|      null|      null|         null|         null|\n|Q102228280|        false|         true|      null|        null|         null|0000 0004 0505 9394|     null|     264914|                null|       []|          []|   Q25228|anguilla communit...|                null|                null|                null|                null|                null|      null|      null|         null|         null|\n| Q17141904|         true|         true|2802914177|        null|grid.472476.4|0000 0004 1756 4080|00kgqwj69|     117088|     http://auis.edu|       []|          []|   Q25228|american universi...|                null|                null|american universi...|[university of si...|                null|      null|      null|         null|         null|\n|  Q3315277|        false|         true|      null|        null|grid.500532.1|               null|04gfk4b59|       null|http://www.cultur...|       []|          []|     Q419| ministry of culture|ministerio de cul...|ministère de la c...|                null|                null|[ministerio de cu...|      null|      null|          per|           pe|\n|  Q6979226|         true|         true|  13735046|        null|grid.441688.7|0000 0001 2231 392x|004fs0e42|     125814|http://www.unitru...|       []|          []|     Q419|national universi...|universidad nacio...|                null|                null|                null|               [unc]|      null|      null|          per|           pe|\n| Q20022058|        false|         true|      null|        null|grid.441932.9|0000 0004 0402 2653|031vfrf75|     125824|http://www.unp.ed...|       []|          []|     Q419|universidad nacio...|universidad nacio...|                null|                null|                null|[unt, universidad...|      null|      null|          per|           pe|\n| Q30297175|        false|         true|      null|        null|grid.454361.1|0000 0001 2234 8647|04cma1r71|       null|http://www.grade....|       []|          []|     Q419|group for the ana...|grupo de análisis...|                null|                null|             [grade]|[grupo de analisi...|      null|      null|          per|           pe|\n| Q50039706|        false|         true|      null|        null|grid.492848.b|               null|02309hn07|       null|http://www.vialib...|       []|          []|     Q419|           via libre|                null|                null|                null|                null|                null|      null|      null|          per|           pe|\n|  Q4807490|         true|         true|  27832314|        null|grid.422949.0|               null|02bm24g42|       null|http://www.impact...|       []|          []|     Q419|asociación civil ...|                null|                null|                null|[asociacion civil...|                null|      null|      null|          per|           pe|\n| Q24639285|        false|         true|      null|        null|grid.414887.6|               null|02cbk9w51|       null|http://hdosdemayo...|       []|          []|     Q419|hospital real de ...|hospital nacional...|                null|                null|                null|[hospital dos de ...|      null|      null|          per|           pe|\n| Q29054165|        false|         true|      null|        null|grid.441690.e|               null|05e2jbm26|       null|                null|       []|          []|     Q419|universidad priva...|universidad priva...|                null|                null|                null|                null|      null|      null|          per|           pe|\n| Q30281971|        false|         true|      null|        null|grid.419080.4|0000 0001 2236 6140|05by4rq81|       null|http://www.iin.sl...|       []|          []|     Q419|instituto de inve...|                null|                null|                null|               [iin]|                null|      null|      null|          per|           pe|\n|  Q6156772|        false|         true|      null|        null|grid.479985.e|0000 0004 4912 1209|040gykh71|       null|http://www.utec.e...|       []|          []|     Q419|university of eng...|universidad de in...|                null|                null|[utec, university...|[universidad de i...|      null|      null|          per|           pe|\n| Q30294002|        false|         true|      null|        null|grid.441841.c|               null|04e8qfh32|       null|                null|       []|          []|     Q419|universidad marce...|                null|                null|                null|                null|                null|      null|      null|          per|           pe|\n| Q30286391|        false|         true|      null|        null|grid.427599.4|               null|046msyg33|       null|                null|       []|          []|     Q419|boca raton clinic...|                null|                null|                null|                null|                null|      null|      null|          per|           pe|\n| Q99309029|        false|         true|      null|        null|         null|0000 0004 4658 948x|     null|     393266|                null|[Q912887]|          []|     Q419|cambridge univers...|                null|                null|                null|                null|                null|      null|      null|          per|           pe|\n|  Q1117071|        false|         true|      null|        null|grid.441975.a|0000 0001 0739 3319|03eek8g24|      33219|http://www.upao.e...|       []|          []|     Q419|antenor orrego pr...|universidad priva...|université privée...|universidad priva...|[universidad priv...|                null|      null|      null|          per|           pe|\n| Q61931750|        false|         true|      null|        null|grid.502028.d|               null|03qgydn21|       null|http://www.ensb.e...|       []|          []|     Q419|escuela nacional ...|                null|                null|                null|[instituto nacion...|                null|      null|      null|          per|           pe|\n|  Q8960735|        false|         true|      null|        null|         null|0000 0004 0461 7673|     null|     207227|                null|[Q270145]|          []|     Q419|faculty of medici...|facultad de medic...|                null|                null|                null|[facultad de medi...|      null|      null|          per|           pe|\n| Q59536236|        false|         true|      null|        null|grid.499789.2|               null|045thzj17|       null|http://www.diresa...|       []|          []|     Q419|dirección regiona...|                null|                null|                null|                null|                null|      null|      null|          per|           pe|\n+----------+-------------+-------------+----------+------------+-------------+-------------------+---------+-----------+--------------------+---------+------------+---------+--------------------+--------------------+--------------------+--------------------+--------------------+--------------------+----------+----------+-------------+-------------+\nonly showing top 20 rows\n\nroot\n |-- id: string (nullable = true)\n |-- existence_mag: boolean (nullable = true)\n |-- existence_org: boolean (nullable = true)\n |-- MAG_ID: string (nullable = true)\n |-- CR_FUNDER_ID: string (nullable = true)\n |-- GRID_ID: string (nullable = true)\n |-- ISNI_ID: string (nullable = true)\n |-- ROR_ID: string (nullable = true)\n |-- RINGGOLD_ID: string (nullable = true)\n |-- WebPage: string (nullable = true)\n |-- parents: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- subsidiaries: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- countryId: string (nullable = true)\n |-- labels_en: string (nullable = true)\n |-- labels_es: string (nullable = true)\n |-- labels_fr: string (nullable = true)\n |-- labels_de: string (nullable = true)\n |-- aliases_en: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- aliases_es: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- aliases_de: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- aliases_fr: array (nullable = true)\n |    |-- element: string (containsNull = true)\n |-- ISO3166_3Code: string (nullable = true)\n |-- ISO3166_2Code: string (nullable = true)\n\nWikidata cnt:164490\nimport org.apache.spark.sql.types._\nimport org.apache.commons.lang.StringUtils\nimport java.lang.Integer.parseInt\nimport org.slf4j.Logger\nimport org.slf4j.LoggerFactory\nimport org.apache.spark.sql.functions.concat_ws\nimport org.apache.spark.sql.functions.countDistinct\nimport org.apache.spark.storage.StorageLevel\n\u001b[1m\u001b[34mcountriesWIKIdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [id: string, label_en: string ... 2 more fields]\n\u001b[1m\u001b[34mwikidatadf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [id: string, typ: string ... 5 more fields]\n\u001b[1m\u001b[34mmagWIKIdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.Dataset[org.apache.spark.sql.Row]\u001b[0m = [id: string, existence_mag: boolean ... 21 more fields]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=18"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=19"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=20"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=21"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=22"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=23"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618311192876_1152122759",
   "id": "paragraph_1618311192876_1152122759",
   "dateCreated": "2021-04-13T13:53:12+0300",
   "dateStarted": "2021-04-13T13:53:12+0300",
   "dateFinished": "2021-04-13T14:10:01+0300",
   "status": "FINISHED"
  },
  {
   "text": "%spark\n//println(\"Wikidata cnt:\" + magWIKIdf.filter($\"ISO3166_2Code\"=!=\"\" && !isnull($\"ISO3166_2Code\")).count())\nmagWIKIdf.where(($\"ISO3166_3Code\".isNotNull).or($\"ISO3166_2Code\".isNotNull)).select($\"id\").agg(count(\"id\"), countDistinct(\"id\")).show(false)\n",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T14:39:51+0300",
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+---------+---------+\n|count(id)|count(id)|\n+---------+---------+\n|161953   |161953   |\n+---------+---------+\n\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=25"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618313991371_1106678330",
   "id": "paragraph_1618313991371_1106678330",
   "dateCreated": "2021-04-13T14:39:51+0300",
   "dateStarted": "2021-04-13T14:39:51+0300",
   "dateFinished": "2021-04-13T14:39:53+0300",
   "status": "FINISHED"
  },
  {
   "text": "%spark\nmagWIKIdf.select(wikidatadf(\"id\"), $\"existence_mag\", $\"existence_org\", $\"MAG_ID\", $\"CR_FUNDER_ID\", $\"GRID_ID\", $\"ISNI_ID\", $\"ROR_ID\", $\"RINGGOLD_ID\", $\"WebPage\", $\"parents\"\n            , $\"subsidiaries\", $\"countryId\", $\"labels_en\", $\"labels_es\", $\"labels_fr\", $\"labels_de\", $\"aliases_en\", $\"aliases_es\", $\"aliases_de\", $\"aliases_fr\", $\"ISO3166_3Code\"\n            , $\"ISO3166_2Code\").write.mode(\"overwrite\").json(s\"$WIKI_OUT/sample_out.json\")",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T13:47:30+0300",
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": []
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=17"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618310850692_1392720448",
   "id": "paragraph_1618310850692_1392720448",
   "dateCreated": "2021-04-13T13:47:30+0300",
   "dateStarted": "2021-04-13T13:47:30+0300",
   "dateFinished": "2021-04-13T13:47:30+0300",
   "status": "FINISHED"
  },
  {
   "text": "%spark\n\nval double = \"/media/ometaxas/nvme/datasets/WikiData/out/duplicaterecords/double.parquet\"\nval doublerecordsdf = spark.read.parquet(s\"$double\")\ndoublerecordsdf.show(10)\n//val orgWIKIdf = spark.read.parquet(s\"$WIKI_HOME/org_wikidata.parquet\")",
   "user": "anonymous",
   "dateUpdated": "2021-04-13T12:03:11+0300",
   "config": {
    "editorHide": false
   },
   "settings": {
    "params": {},
    "forms": {}
   },
   "results": {
    "code": "SUCCESS",
    "msg": [
     {
      "type": "TEXT",
      "data": "+-----+-------------+-------------+------+------------+-------+-------------------+------+-----------+--------------------+-------+------------+---------+---------+---------+---------+---------+-------------+-------------+--------------------+--------------------+--------------------+--------------------+\n|   id|existence_mag|existence_org|MAG_ID|CR_FUNDER_ID|GRID_ID|            ISNI_ID|ROR_ID|RINGGOLD_ID|             WebPage|parents|subsidiaries|countryId|labels_en|labels_es|labels_fr|labels_de|ISO3166_3Code|ISO3166_2Code|              alt_en|              alt_es|              alt_de|              alt_fr|\n+-----+-------------+-------------+------+------------+-------+-------------------+------+-----------+--------------------+-------+------------+---------+---------+---------+---------+---------+-------------+-------------+--------------------+--------------------+--------------------+--------------------+\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          cze|           cz|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          som|           so|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          esh|           eh|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          niu|           nu|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          arg|           ar|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          tkm|           tm|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          prt|           pt|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          blr|           by|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          jpn|           jp|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n|Q1000|        false|         true|  null|        null|   null|0000 0001 2195 6165|  null|     206922|http://www.legabo...|     []|          []|    Q1000|    gabon|    gabón|    gabon|    gabun|          bra|           br|[gabonese republi...|[república gabone...|[gabonese republi...|[république gabon...|\n+-----+-------------+-------------+------+------------+-------+-------------------+------+-----------+--------------------+-------+------------+---------+---------+---------+---------+---------+-------------+-------------+--------------------+--------------------+--------------------+--------------------+\nonly showing top 10 rows\n\n\u001b[1m\u001b[34mdouble\u001b[0m: \u001b[1m\u001b[32mString\u001b[0m = /media/ometaxas/nvme/datasets/WikiData/out/duplicaterecords/double.parquet\n\u001b[1m\u001b[34mdoublerecordsdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m = [id: string, existence_mag: boolean ... 21 more fields]\n"
     }
    ]
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=0"
      },
      {
       "jobUrl": "http://192.168.2.7:4040/jobs/job?id=1"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1618304591508_1395050662",
   "id": "paragraph_1618304591508_1395050662",
   "dateCreated": "2021-04-13T12:03:11+0300",
   "dateStarted": "2021-04-13T12:03:11+0300",
   "dateFinished": "2021-04-13T12:03:16+0300",
   "status": "FINISHED"
  },
  {
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "status": "READY",
   "text": "%spark",
   "id": "",
   "config": {}
  },
  {
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "status": "READY",
   "text": "%spark\n//Process WIKIDATA parquet files \n\nimport org.apache.spark.sql.types._\nimport org.apache.commons.lang.StringUtils\nimport java.lang.Integer.parseInt\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.apache.spark.sql.functions.concat_ws;\nimport org.apache.spark.sql.functions.countDistinct;\nimport org.apache.spark.storage.StorageLevel;\n\n\n//val wikidatadf = spark.read.parquet(s\"file://$WIKI_HOME\")\n\n//val countriesWIKIdf = spark.read.parquet(s\"$WIKI_OUT/countries_wikidata.parquet\")\n//  /part-00000-02658916-9459-424b-822a-4344eec93163-c000.snappy.parquet\n\n//\"claims\":[{\"id\":\"Q43469437$1DB22FAF-5063-4CD2-A681-5E1585E343C7\",\n// \"mainSnak\":{\"typ\":\"value\",\"property\":\"P356\",\"dataType\":\"external-id\",\"dataValue\":{\"typ\":\"string\",\"value\":\"\\\"10.1111/J.1464-5491.2009.02743.X\\\"\"}}/\n\n//wikidatadf.show(40)\n//wikidatadf.filter($\"aliases\"===\"P356\").show(20)\n\n\n//val wikipropdf = wikidatadf.filter($\"typ\"===\"property\")\n//.persist(StorageLevel.DISK_ONLY)\n\n\n//println(\"poperties cnt:\" + wikipropdf.count())\n\n/* Properties \nMAG_Id: P6366\nGRID_ID: P2427\nRinggold ID: P3500\nROR: P6782\nISNI: P213\nCrossRefFunder: P3153\n\nCountry: P17\nOfficial WEB Site: P856\n    language of work or name: P407\nparent Org: P749\nChildren(subsidiary): P355\n\nInstance_Of: P31\nscholarly article: Q13442814\nOfficialName: P1448\n\n\n*/\nval magWIKIdf = wikidatadf\n        //.withColumn(\"label_lng\", map_keys($\"labels\").getItem(0))\n        //.withColumn(\"label\", map_values($\"labels\").getItem(0))\n        //.withColumn(\"existence_flag\", expr(\"exists(claims, x -> x.id = 'Q27721769$8226B15F-37DE-4BEF-8F8F-80D442DFDDA9')\"))\n        //.withColumn(\"existence_flag\", expr(\"exists(claims, x -> x.mainSnak.property = 'P356' and x.mainSnak.dataValue.value = '\\\"10.1111/J.1464-5491.2009.02743.X\\\"')\"))\n\n        .withColumn(\"labels_en\",normStr($\"labels\".getItem(\"en\")))\n        .withColumn(\"labels_fr\", normStr($\"labels\".getItem(\"fr\")))\n        .withColumn(\"labels_de\", normStr($\"labels\".getItem(\"de\")))\n        .withColumn(\"labels_es\", normStr($\"labels\".getItem(\"es\")))\n        \n        .withColumn(\"aliases_en\", normArrStr($\"aliases\".getItem(\"en\")))\n        //.withColumn(\"aliases_en\", normArrStr($\"aliases_en1\"))\n        \n        .withColumn(\"aliases_fr\", normArrStr($\"aliases\".getItem(\"fr\")))\n        //.withColumn(\"aliases_fr\", normArrStr($\"aliases_fr1\"))\n        \n        .withColumn(\"aliases_de\", normArrStr($\"aliases\".getItem(\"de\")))\n        //.withColumn(\"aliases_de\", normArrStr($\"aliases_de1\"))\n        \n        .withColumn(\"aliases_es\", normArrStr($\"aliases\".getItem(\"es\")))\n        //.withColumn(\"aliases_es\", normArrStr($\"aliases_es1\"))\n        \n        .withColumn(\"existence_mag\", expr(\"exists(claims, x -> x.mainSnak.property = 'P6366')\")) //has MAG_ID\n        .withColumn(\"existence_org\", expr(\"exists(claims, x ->  x.mainSnak.property = 'P2427'  OR x.mainSnak.property = 'P3500'   OR x.mainSnak.property = 'P6782'  )\")) // has either GRID or Ringgold\n        .withColumn(\"is_research_article_flag\", expr(\"exists(claims, x -> x.mainSnak.property = 'P31' and x.mainSnak.dataValue.value = 'Q13442814')\")) //Is Scholarly Article \n\n        .withColumn(\"instanceofsVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P31')\"))\n        .withColumn(\"instanceofs\", expr(\"TRANSFORM (instanceofsVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"))\n        //.withColumn(\"instanceofids\",get_json_object($\"instanceofarr\", \"$.id\").alias(\"instanceof.id\")) // only the first id\n        //.withColumn(\"instanceof\",concat_ws(\",\",col(\"instanceofarr\")))\n        //.withColumn(\"instanceofid\",get_json_object($\"instanceof\", \"$.id\").alias(\"instanceof.id\")) // only the first id\n\n        .withColumn(\"countriesVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P17')\"))\n        .withColumn(\"countryId\", element_at(expr(\"TRANSFORM (countriesVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"), 1))\n\n        .withColumn(\"subsidiaryVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P355')\"))\n        .withColumn(\"subsidiaries\", expr(\"TRANSFORM (subsidiaryVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"))\n\n        .withColumn(\"parentVal\", expr(\"filter(claims, x -> x.mainSnak.property = 'P749')\"))\n        .withColumn(\"parents\", expr(\"TRANSFORM (parentVal, x -> get_json_object(x.mainSnak.dataValue.value,\\\"$.id\\\"))\"))\n\n        .withColumn(\"WebPageValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P856')\"))\n        .withColumn(\"WebPage\", normStr(element_at(expr(\"TRANSFORM (WebPageValue, x -> x.mainSnak.dataValue.value)\"), 1))) //Official WEB Site\n\n\n        .withColumn(\"MAG_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P6366')\"))\n        .withColumn(\"MAG_ID\", normStr(element_at(expr(\"TRANSFORM (MAG_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n        //.withColumn(\"MAGID\",concat_ws(\",\",col(\"MAGIDsarr\")))\n\n        .withColumn(\"RINGGOLD_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P3500')\"))\n        .withColumn(\"RINGGOLD_ID\", normStr(element_at(expr(\"TRANSFORM (RINGGOLD_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n        //.withColumn(\"RINGGOLDIds\",concat_ws(\",\",col(\"RINGGOLDIdsarr\")))\n\n        .withColumn(\"ROR_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P6782')\"))\n        .withColumn(\"ROR_ID\", normStr(element_at(expr(\"TRANSFORM (ROR_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n\n        .withColumn(\"ISNI_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P213')\"))\n        .withColumn(\"ISNI_ID\", normStr(element_at(expr(\"TRANSFORM (ISNI_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n\n        .withColumn(\"GRID_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P2427')\"))\n        .withColumn(\"GRID_ID\", normStr(element_at(expr(\"TRANSFORM (GRID_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n\n\n        .withColumn(\"CR_FUNDER_IDsValue\", expr(\"filter(claims, x -> x.mainSnak.property = 'P3153')\"))\n        .withColumn(\"CR_FUNDER_ID\", normStr(element_at(expr(\"TRANSFORM (CR_FUNDER_IDsValue, x -> x.mainSnak.dataValue.value)\"), 1)))\n        //.withColumn(\"ISO3166_3Code\",  element_at(col(\"ISO3166_3Codes\"),1))\n\n\n        .filter($\"existence_org\" === true && $\"typ\" === \"item\" && $\"is_research_article_flag\" === false)\n        .join(broadcast(countriesWIKIdf), countriesWIKIdf(\"Id\") === $\"countryId\", \"outer\")\n        .select(wikidatadf(\"id\"), $\"existence_mag\", $\"existence_org\", $\"MAG_ID\", $\"CR_FUNDER_ID\", $\"GRID_ID\", $\"ISNI_ID\", $\"ROR_ID\", $\"RINGGOLD_ID\", $\"WebPage\", $\"parents\"\n            , $\"subsidiaries\", $\"countryId\", $\"labels_en\", $\"labels_es\", $\"labels_fr\", $\"labels_de\", $\"aliases_en\", $\"aliases_es\", $\"aliases_de\", $\"aliases_fr\", $\"ISO3166_3Code\"\n            , $\"ISO3166_2Code\")\n        .persist(StorageLevel.DISK_ONLY)\n\nmagWIKIdf.show(10)\nmagWIKIdf.printSchema\nprintln(\"Wikidata cnt:\" + magWIKIdf.count())\n\nmagWIKIdf.write.parquet(s\"$WIKI_OUT/wiki_orgs.parquet\")\n\n\n",
   "config": {
    "title": true
   },
   "title": "Filter all MAG related entities"
  },
  {
   "text": "%spark\nval orgWIKIdf = spark.read.parquet(s\"$WIKI_HOME/org_wikidata.parquet\")\n.select($\"id\", $\"existence_mag\", $\"existence_org\", $\"CR_FUNDER_ID\", $\"GRID_ID\", $\"ISNI_ID\", $\"ROR_ID\", $\"RINGGOLD_ID\", $\"WebPage\", $\"parents\"\n            , $\"subsidiaries\", $\"countryId\", $\"labels_en\", $\"labels_es\", $\"labels_fr\", $\"labels_de\", \n            normArrStr($\"aliases_en\").as(\"aliases_en\"), normArrStr($\"aliases_es\").as(\"aliases_es\"), normArrStr($\"aliases_de\").as(\"aliases_de\"), normArrStr($\"aliases_fr\").as(\"aliases_fr\")\n           , $\"ISO3166_3Code\"    , $\"ISO3166_2Code\")      \n        .write.parquet(s\"$WIKI_HOME/wiki_orgs.parquet\")\n\n\n",
   "user": "anonymous",
   "dateUpdated": "2021-02-02T11:43:40+0200",
   "config": {
    "results": [
     {}
    ]
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "state": {
        "currentPage": "Console",
        "table": {
         "visibleRow": 5.0
        }
       }
      }
     }
    },
    "forms": {}
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=83"
      },
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=84"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1612259020259_351838420",
   "id": "paragraph_1612259020259_351838420",
   "dateCreated": "2021-02-02T11:43:40+0200",
   "dateStarted": "2021-02-02T11:43:40+0200",
   "dateFinished": "2021-02-02T11:43:42+0200",
   "status": "FINISHED"
  },
  {
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "status": "READY",
   "text": "%spark\nval WIKI_HOME = \"/media/ometaxas/nvme/datasets/WikiData/dump\"\n\nval wikidatadf = spark.read.parquet(s\"file://$WIKI_HOME/dump\")\n\nval stanfordRec = wikidatadf.filter($\"id\" === \"Q41506\").cache()\n\nstanfordRec.printSchema()\n\nstanfordRec.write.json(s\"$WIKI_HOME/stanford.json\")",
   "id": "",
   "config": {}
  },
  {
   "text": "%spark\nval WIKI_HOME = \"/media/ometaxas/nvme/datasets/WikiData/dump\"\n\nval wikidatadf = spark.read.parquet(s\"$WIKI_HOME/fos_org_wikidata.parquet\")\n\nval stanfordRec = wikidatadf.filter($\"id\" === \"Q41506\").cache()\n\nstanfordRec.printSchema()\n\nstanfordRec.write.json(s\"$WIKI_HOME/stanford.json\")\n",
   "user": "anonymous",
   "dateUpdated": "2021-01-29T14:15:27+0200",
   "config": {},
   "settings": {
    "params": {},
    "forms": {}
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=68"
      },
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=69"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1611922527020_2111019732",
   "id": "paragraph_1611922527020_2111019732",
   "dateCreated": "2021-01-29T14:15:27+0200",
   "dateStarted": "2021-01-29T14:15:27+0200",
   "dateFinished": "2021-01-29T14:15:35+0200",
   "status": "FINISHED"
  },
  {
   "text": "%spark\n//val WIKI_HOME = \"/media/ometaxas/nvme/datasets/WikiData\"\n//val ORGS_HOME = \"/media/ometaxas/nvme/datasets/WikiData/out/wiki_orgs.parquet\"\nval ORGS_HOME = \"/home/ometaxas/Datasets/Wikidata/old/wiki_orgs.parquet\"\n\n//val COUNTRY_HOME = \"/media/ometaxas/nvme/datasets/WikiData/out\"\n\n\nval orgs = spark.read.parquet(s\"$ORGS_HOME\")\n\n//val orgs = wikidata_org_fos_df.filter($\"existence_org\" === true).cache()\nprintln(\"orgs cnt:\" + orgs.count())\n\norgs.show(false)\n\n//val stanforddf = wikidata_org_fos_df.filter($\"id\" === \"Q41506\").select($\"instanceofarr\", $\"instanceof\", $\"instanceofid\").cache()\n\n//stanforddf.show(1, false)\n",
   "user": "anonymous",
   "dateUpdated": "2021-04-09T16:33:41+0300",
   "config": {
    "results": [
     {}
    ]
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "state": {
        "currentPage": "Console"
       }
      }
     }
    },
    "forms": {}
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=54"
      },
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=55"
      },
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=56"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1617975221601_1192481029",
   "id": "paragraph_1617975221601_1192481029",
   "dateCreated": "2021-04-09T16:33:41+0300",
   "dateStarted": "2021-04-09T16:33:41+0300",
   "dateFinished": "2021-04-09T16:33:41+0300",
   "status": "FINISHED"
  },
  {
   "text": "%spark\n\nval WIKI_HOME = \"/media/ometaxas/nvme/datasets/WikiData/dump\"\n\nval wikidata_org_fos_df = spark.read.parquet(s\"$WIKI_HOME/wiki_orgs.parquet\")\n// $\"GRID_ID\", $\"ISNI_ID\", $\"ROR_ID\", $\"RINGGOLD_ID\",\nval orgs = wikidata_org_fos_df.filter($\"existence_org\" === true && $\"GRID_ID\"=!=\"\" && !isnull($\"GRID_ID\")\n     && $\"RINGGOLD_ID\"=!=\"\" && !isnull($\"RINGGOLD_ID\")).cache()\nprintln(\"Ring_Grid pairs cnt:\" + orgs.count())\n\norgs.show(false)\n\n",
   "user": "anonymous",
   "dateUpdated": "2021-03-24T16:17:43+0200",
   "config": {
    "results": [
     {}
    ]
   },
   "settings": {
    "params": {
     "bdtMeta": {
      "inlay": {
       "state": {
        "currentPage": "Console",
        "chart": {
         "series": [
          {
           "type": "Line",
           "x": {
            "column": "id",
            "index": 0.0
           },
           "y": {
            "column": "RINGGOLD_ID",
            "index": 8.0
           }
          }
         ]
        }
       }
      }
     }
    },
    "forms": {}
   },
   "apps": [],
   "runtimeInfos": {
    "jobUrl": {
     "propertyName": "jobUrl",
     "label": "SPARK JOB",
     "tooltip": "View in Spark web UI",
     "group": "spark",
     "values": [
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=5"
      },
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=6"
      },
      {
       "jobUrl": "http://omiros.station:4040/jobs/job?id=7"
      }
     ],
     "interpreterSettingId": "spark"
    }
   },
   "progressUpdateIntervalMs": 500.0,
   "jobName": "paragraph_1616595463843_336443237",
   "id": "paragraph_1616595463843_336443237",
   "dateCreated": "2021-03-24T16:17:43+0200",
   "dateStarted": "2021-03-24T16:17:43+0200",
   "dateFinished": "2021-03-24T16:17:48+0200",
   "status": "FINISHED"
  }
 ],
 "name": "Zeppelin Notebook",
 "id": "",
 "noteParams": {},
 "noteForms": {},
 "angularObjects": {},
 "config": {
  "isZeppelinNotebookCronEnable": false,
  "looknfeel": "default",
  "personalizedMode": "false"
 },
 "info": {}
}